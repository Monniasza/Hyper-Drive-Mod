// hype-reactor-150.cfg v2.6.99.0
// Simple Hyperdrive (HYPE)
// created: 23 Feb 2023
// updated: 23 Feb 2023

// this file: GPL-2.0 by:
//  [zer0Kerbal](http://github.com/zer0Kerbal)

PART
{
	name = hype-reactor-125
	module = Part
	author = RoverDude and zer0Kerbal

    MODEL
    {
        model = Squad/Parts/Resources/MiniISRU/MiniISRU
        scale = 1.25,1.25,1.25
    }
	scale = 1.0
	rescaleFactor = 1.0
	bulkheadProfiles = size1, srf

	attachRules = 1,1,1,0,0
	node_stack_top = 0.0, .9, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -.9, 0.0, 0.0, -1.0, 0.0, 1

	TechRequired = nanolathing
	entryCost = 500000 // 500000
	cost = 250000 // 5000000
	category = Utility
	subcategory = 0

	title = #HYPE-reactor-125-titl
	manufacturer = #HYPE-Agency-titl
	description = #HYPE-reactor-125-desc
	tags = #autoLOC_500663 // conver isru mine )mining (ore process resource

	mass = 1.25

	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2

	crashTolerance = 7

	maxTemp = 2000

	MODULE { name = ModuleOverheatDisplay }

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = #HYPE-mrc-ore2Ion-name // Ion
		StartActionName = #HYPE-mrc-ore2Ion-strt // Start ISRU [Ore->Ion]
		StopActionName = #HYPE-mrc-ore2Ion-stop // Stop ISRU [Ore->Ion]
		resourceOutputName = #HYPE-resource-ion-name // Ion
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 50000 0 0
			key = 750 25000 0 0
			key = 1000 5000 0 0
			key = 1250 2500 0 0	
			key = 2000 2500 0 0	
			key = 4000 0 0 0
		}				
		GeneratesHeat = True // false
		DefaultShutoffTemp = 0.8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.9 0 0
			key = 1000 1.0 0 0
			key = 1250 0.9 0 0
			key = 1500 0.5 0 0
			key = 3000 0.0 0 0 
		}
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1

		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.2 // 1 20%
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ion
			Ratio = 20 // 100 20%
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = #HYPE-mrc-CIon2Ion-name // Condensed Ion
		StartActionName = #HYPE-mrc-CIon2Ion-strt // Start ISRU [C-Ion->Ion]
		StopActionName = #HYPE-mrc-CIon2Ion-stop // Stop ISRU [C-Ion->Ion]
		resourceOutputName = #HYPE-resource-ion-name // Ion
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 50000 0 0
			key = 750 25000 0 0
			key = 1000 5000 0 0
			key = 1250 2500 0 0	
			key = 2000 2500 0 0	
			key = 4000 0 0 0
		}				
		GeneratesHeat = True
		DefaultShutoffTemp = 0.8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.9 0 0
			key = 1000 1.0 0 0
			key = 1250 0.9 0 0
			key = 1500 0.5 0 0
			key = 3000 0.0 0 0 
		}
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1
		 
		INPUT_RESOURCE
		{
			ResourceName = CondensedIon
			Ratio = 0.2 // 1
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ion
			Ratio = 20000 // 100000
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = #HYPE-mrc-Ion2EC-name // ION Conversion Electric
		StartActionName = #HYPE-mrc-Ion2EC-strt // Start ISRU [Ion->e-]
		StopActionName = #HYPE-mrc-Ion2EC-stop // Stop ISRU [Ion->e-]
		resourceOutputName = #autoLOC_313132 // Electric Charge
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 0 0 0
			key = 500 0.9 0 0
			key = 1000 1.0 0 0
			key = 1250 0.9 0 0
			key = 1500 0.5 0 0
			key = 3000 0.0 0 0 
		}				
		GeneratesHeat = True
		DefaultShutoffTemp = 0.8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.1 0 0
			key = 1000 1.0 0 0
			key = 1250 0.1 0 0
			key = 3000 0 0 0 
		}
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1

		INPUT_RESOURCE
		{
			ResourceName = Ion
			Ratio = 0.20 // 1
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 2000 // 10000
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = #HYPE-mrc-EC2Ion-name // Electric Conversion ION
		StartActionName = #HYPE-mrc-EC2Ion-strt // Start ISRU [e-->Ion]
		StopActionName = #HYPE-mrc-EC2Ion-stop // Stop ISRU [e-->Ion]
		resourceOutputName = #HYPE-resource-ion-name // Ion
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 50000 0 0
			key = 750 25000 0 0
			key = 1000 5000 0 0
			key = 1250 2500 0 0	
			key = 2000 2500 0 0	
			key = 4000 0 0 0
		}				
		GeneratesHeat = True
		DefaultShutoffTemp = 0.8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.9 0 0
			key = 1000 1.0 0 0
			key = 1250 0.9 0 0
			key = 1500 0.5 0 0
			key = 3000 0.0 0 0 
		}
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1500 // 7500
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ion
			Ratio = 0.20 // 1
			DumpExcess = true
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = #HYPE-mrc-hc2cry-name // Hyper Crystal Converter
		StartActionName = #HYPE-mrc-hc2cry-strt // Start ISRU [Crystal]
		StopActionName = #HYPE-mrc-hc2cry-stop // Stop ISRU [Crystal]
		resourceOutputName = #HYPE-resource-ion-name // Ion
		AutoShutdown = true
		TemperatureModifier
		{
			key = 0 50000 0 0
			key = 750 25000 0 0
			key = 1000 5000 0 0
			key = 1250 2500 0 0	
			key = 2000 2500 0 0	
			key = 4000 0 0 0
		}				
		GeneratesHeat = True
		DefaultShutoffTemp = 0.8
		ThermalEfficiency 
		{
			key = 0 0 0 0
			key = 500 0.9 0 0
			key = 1000 1.0 0 0
			key = 1250 0.9 0 0
			key = 1500 0.5 0 0
			key = 3000 0.0 0 0 
		}
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		UseSpecialistHeatBonus = true
		SpecialistHeatFactor = 0.1
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1500 // 7500
			FlowMode = STAGE_PRIORITY_FLOW
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Ion
			Ratio = 0.2 // 1
			DumpExcess = false
			FlowMode = STAGE_PRIORITY_FLOW
		}
	}

	// MODULE
	// {
	// 	name = ModuleAnimationGroup
	// 	deployAnimationName = 
	// 	activeAnimationName = ProcessorLarge_running
	// 	deployActionName = #autoLOC_6002380 // Deploy <<1>>
	// 	retractActionName = #autoLOC_6002381 // Retract <<1>>
	// 	toggleActionName = #autoLOC_6002382 // Toggle <<1>>
	// 	moduleType = #autoLOC_7001227  // Converter
	// 	autoDeploy = true
	// }

	MODULE
	{
		name = ModuleCoreHeat
		CoreTempGoal = 1000					//Internal temp goal - we don't transfer till we hit this point
		CoreToPartRatio = 0.1				//Scale back cooling if the part is this % of core temp
		CoreTempGoalAdjustment = 0			//Dynamic goal adjustment
		CoreEnergyMultiplier = 0.1			//What percentage of our core energy do we transfer to the part
		HeatRadiantMultiplier = 0.05		//If the core is hotter, how much heat radiates?
		CoolingRadiantMultiplier = 0		//If the core is colder, how much radiates?
		HeatTransferMultiplier = 0			//If the part is hotter, how much heat transfers in?
		CoolantTransferMultiplier = 0.01	//If the part is colder, how much of our energy can we transfer?
		radiatorCoolingFactor = 1			//How much energy we pull from core with an active radiator?  >= 1
		radiatorHeatingFactor = 0.01		//How much energy we push to the active radiator
		MaxCalculationWarp = 1000			//Based on how dramatic the changes are, this is the max rate of change
		CoreShutdownTemp = 4000				//At what core temperature do we shut down all generators on this part?
		MaxCoolant = 750					//Maximum amount of radiator capacity we can consume - 50 = 1 small
	}

	MODULE
	{
		name = ModuleCargoPart		
		packedVolume = -1
	}

}